{"version":3,"sources":["img/bg.png","components/styles/styledCell.js","tetrominoes.js","components/Cell.js","components/styles/styledStage.js","components/Stage.js","components/styles/styledDisplay.js","components/Display.js","components/styles/styledStartButton.js","components/StartButton.js","gameHelpers.js","components/styles/styledTetris.js","hooks/usePlayer.js","hooks/useStage.js","components/Tetris.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledCell","styled","div","props","color","type","tetrominoes","0","shape","I","J","L","S","O","T","Z","randomTetrominoe","randT","Math","floor","random","length","Cell","StyledStage","height","width","Stage","stage","map","row","cell","x","key","StyledDisplay","gameover","Display","text","StyledStartButton","StartButton","callback","onClick","createStage","console","log","Array","from","fill","checkCollision","player","moveX","moveY","y","tetromino","pos","StyledTetrisWrapper","bgImage","StyledTetris","usePlayer","useState","collided","setPlayer","rotate","matrix","dir","rotated","_","index","col","reverse","resetPlayer","useCallback","STAGE_WIDTH","prev","clonedPlayer","JSON","parse","stringify","offSet","useStage","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","reduce","accum","findIndex","unshift","push","sweepRows","Tetris","dropTime","setDropTime","setgameover","updatePlayerPos","playerRotate","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","keyUp","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29ae0187.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n    width:auto;\n    background:rgba(${props => props.color});\n    border: ${props => (props.type === 0 ? '0px solid' : '4px solid') };\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n`","export const tetrominoes ={\n    0:{shape:[[0]], color: '0,0,0'},\n    I: {shape:[\n        [0, 'I',0,0],\n        [0, 'I',0,0],\n        [0, 'I',0,0],\n        [0, 'I',0,0]\n            ], \n            color: '80,227,230'},\n        J: {shape:[\n            [0, 'J',0],\n            [0, 'J',0],\n            ['J', 'J',0],\n            \n                ], \n                color: '36,96,223'},\n        L: {shape:[\n            [0, 'L',0],\n            [0, 'L',0],\n            [0, 'L','L'],\n            \n                ], \n                color: '36,96,223'},\n        S: {shape:[\n            [0, 'S','S'],\n            ['S', 'S',0],\n            [0, 0,0,0,]\n            \n                ], \n                color: '48,211,56'},\n        O: {shape:[\n            ['O', 'O'],\n            ['O', 'O']\n            \n            \n                ], \n                color: '223,173,36'},\n        T: {shape:[\n            [0, 0,0],\n            ['T', 'T','T'],\n            [0, 'T',0],\n            \n                ], \n                color: '36,96,223'},\n        Z: {shape:[\n            ['Z', 'Z',0],\n            [0, 'Z','Z'],\n            [0, 0,0],\n            \n                ], \n                color: '227,78,78'},\n            \n}\n\nexport const randomTetrominoe = () => {\n\n    let letters = \"IJSTLOZ\";\n    const randT = letters[Math.floor(Math.random() * letters.length)];\n\n    return tetrominoes[randT];\n\n}","import React from 'react';\nimport {StyledCell} from './styles/styledCell';\nimport {tetrominoes} from '../tetrominoes';\n\nconst Cell = ({type}) => {\n\nreturn(\n    <StyledCell type={type} color={tetrominoes[type].color}></StyledCell>\n);\n\n}\n\nexport default Cell;","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\ndisplay:grid;\ngrid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw/ ${props => props.width})\n);\ngrid-template-columns: repeat(\n    ${props => props.width}, 1fr);\ngrid-gap: 1px;\nborder: solid #333;\nwidth: 100%;\nmax-width: 25vw;\nmargin: 0 auto;\nbackground: #111;\n\n`","import React from 'react';\nimport Cell from './Cell';\n\nimport {StyledStage} from './styles/styledStage';\n\nconst Stage = ({stage}) => {\n\n\n    return(\n    <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map(row => row.map((cell,x ) => <Cell key={x} type={cell[0]} /> ))}\n    </StyledStage>\n    );\n}\n\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\nbox-sizing:border-box;\ndisplay:flex;\nalign-items:center;\nmargin: 0 0 20px 0;\npadding: 20px;\nborder: 4px solid #333;\nmin-height: 30px;\nwidth: 100%;\nborder-radius: 20px;\ncolor: ${props => (props.gameover ? 'red' : 'gray')};\nbackground:black;\nfont-family: Pixel, Arial, Helvetica;\nfont-size: 0.8rem;\n\n\n\n`","import React from 'react';\n\nimport {StyledDisplay} from './styles/styledDisplay';\n\nconst Display = ({gameover, text}) => {\n\n\n    return(\n    <StyledDisplay gameover={gameover}>{text}</StyledDisplay>\n    );\n\n}\n\n\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.div`\nbox-sizing: border-box;\nmargin: 0 0 20px 0;\npadding: 20px;\nmin-height: 30px;\nwidth: 100%;\nborder-radius: 20px;\nborder: none;\ncolor: white;\nbackground: #333;\nfont-family: Pixel, Arial, Helvetica;\nfont-size: 1rem;\noutline:none;\ncursor: pointer;\n\n\n`","import React from 'react';\n\nimport {StyledStartButton} from './styles/styledStartButton';\n\nconst StartButton = ({callback}) => {\n\n    \n    return(\n    <StyledStartButton onClick={callback}>\n        StartGame\n    </StyledStartButton>\n    )\n}\n\nexport default StartButton;","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>{ \n\nconsole.log(\"Running createstage\");\n\nreturn(    Array.from(Array(STAGE_HEIGHT), () => \n    new Array(STAGE_WIDTH).fill([0,'clear'])\n));\n\n\n}\n\nexport const checkCollision = (player, stage, {x: moveX, y: moveY}) => {\n\n\n    for(let y = 0; y < player.tetromino.length; y++){\n\n        for(let x = 0; x < player.tetromino[0].length; x++){\n\n            //check we are on an actual occupied cell\n            if(player.tetromino[y][x] !== 0){\n                if(\n                //check we are only moving within the stage height (y) and 0\n                !stage[y + player.pos.y + moveY] || \n                //check player isnt moving outside game area's width x\n                !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n                //check cell is set to clear (ie we are not colliding with any other tetrominos)\n                stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] != 'clear'\n                \n                ){\n                    return true;\n                }\n                \n\n\n            }\n\n        }\n    }\n    \n\n}\n\n","import styled from 'styled-components';\n\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n\nwidth:100vw;\nheight:100vh;\nbackground:url(${bgImage}) #000;\nbackground-size:cover;\noverflow: hidden;\n`\n\nexport const StyledTetris = styled.div`\ndisplay:flex;\nalign-items:flex-start;\npadding: 40px;\nmargin: 0 0;\nmax-width: 900px;\n\naside{\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n}\n\n\n`\n\n","import {useState, useCallback} from 'react';\n\nimport {tetrominoes, randomTetrominoe} from '../tetrominoes';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n\n    const [player,setPlayer] = useState({\n        pos: {x:0, y:0},\n        tetromino: tetrominoes[0].shape,\n        collided: false\n    });\n\n    const rotate = (matrix, dir) => {\n        const rotated = matrix.map((_, index) => \n            matrix.map(col => col[index] ))\n        \n        if(dir > 0) return rotated.map(row => row.reverse());\n\n        return rotated.reverse();\n\n\n    }\n\n    const playerRotate = (stage, dir) => {\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\n\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n        const pos = clonedPlayer.pos.x;\n\n        let offSet = 1;\n\n        while(checkCollision(clonedPlayer, stage,{x:0, y:0})){\n            clonedPlayer.pos.x += offSet;\n            offSet = -(offSet + (offSet > 0 ? 1 : -1));\n            if(offSet > clonedPlayer.tetromino[0].length){\n                rotate(clonedPlayer.tetromino,-dir);\n                clonedPlayer.pos.x = pos;\n                return;\n            }\n        }\n\n        setPlayer(clonedPlayer);\n\n\n    }\n\n    const updatePlayerPos = ({x,y,collided}) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided\n        }))\n    }\n\n    const resetPlayer = useCallback(() => {\n        setPlayer({\n            pos:{x:STAGE_WIDTH/2 -2, y: 0, },\n            tetromino: randomTetrominoe().shape,\n            collided: false\n        })\n    }, [])\n\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\n\n}","import {useState, useEffect} from 'react';\nimport {createStage} from '../gameHelpers';\nimport { usePlayer } from './usePlayer';\n\nexport const useStage = (player, resetPlayer) => {\n    const [stage, setStage] = useState(createStage());\n    const [rowsCleared, setRowsCleared] = useState(0);\n\n\n    useEffect(() => {\n\n        setRowsCleared(0);\n\n        const sweepRows = newStage => {\n            return newStage.reduce((accum, row) => {\n                if(row.findIndex(cell => cell[0] === 0) === -1){\n                    setRowsCleared(prev => prev + 1);\n                    accum.unshift(new Array(newStage[0].length).fill([0,'clear']));\n                    return accum;\n                }\n                accum.push(row);\n                return accum;\n            }, [])\n        }\n\n        const updateStage = prevStage => {\n            //flush stage\n            const newStage = prevStage.map(row => \n                row.map(cell => (cell[1] ==='clear' ? [0, 'clear'] : cell )));\n\n                player.tetromino.forEach((row, y) => {\n                    row.forEach((value, x) => {\n                        if(value !== 0){\n                            newStage[y + player.pos.y][x + player.pos.x] = [value, `${player.collided? 'merged' : 'clear'}`]\n                        }\n                    })\n                })\n                //then check if collided\n                if(player.collided){\n                    console.log(\"player collided\")\n                    resetPlayer();\n                    return sweepRows(newStage);\n                }\n\n                return newStage;\n\n        }\n\n        \n\n        setStage(prev => updateStage(prev))\n\n    }, [player, resetPlayer])\n\n\n    return [stage, setStage, rowsCleared];\n\n}","import React, {useState} from 'react';\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nimport {useInterval} from '../hooks/useInterval';\nimport {createStage, checkCollision} from '../gameHelpers';\n//styled components\nimport {StyledTetris, StyledTetrisWrapper} from './styles/styledTetris';\n\n//custom hooks\nimport {usePlayer} from '../hooks/usePlayer';\nimport {useStage} from '../hooks/useStage';\n\nconst DROP_TIME = 500;\n\nconst Tetris = () => {\n\n    const [dropTime, setDropTime] = useState(null);\n    const [gameover, setgameover] = useState(false);\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage,setStage] = useStage(player, resetPlayer);\n\n    const movePlayer = dir => {\n        if(!checkCollision(player,stage, {x:dir, y:0}))\n            updatePlayerPos({x:dir, y:0})\n    }\n\n    const startGame = () => {\n        //reset everything\n        setDropTime(DROP_TIME);\n        setStage(createStage());\n        resetPlayer();\n        setgameover(false);\n    }\n\n    const drop = () => {\n        if(!checkCollision(player,stage, {x:0, y:1})){\n\n            updatePlayerPos({x:0, y:1, collided: false})\n        }else{\n            if(player.pos.y < 1){\n                console.log(\"game over man\")\n                setgameover(true);\n                setDropTime(null);\n            }\n            updatePlayerPos({x:0, y:0, collided: true})\n        }\n\n\n    }\n\n    const dropPlayer = () => {\n        setDropTime(null);\n        drop();\n\n    }\n\n    const move = ({keyCode}) => {\n\n        if(!gameover){\n            if(keyCode === 37){\n                \n                movePlayer(-1);\n            }\n            if(keyCode === 39){\n                movePlayer(1);\n            }\n            if(keyCode === 40){\n                dropPlayer();\n            }else if(keyCode === 38){\n                playerRotate(stage,1);\n            }\n\n        }\n\n    }\n\n    const keyUp = ({keyCode}) => {\n        if(!gameover){\n            if(keyCode === 40){\n                setDropTime(DROP_TIME);\n            }\n        }\n    }\n\n    useInterval( () => {\n        console.log(\"Running drop interval function\")\n        drop();\n    }, dropTime);\n\n\n\n\n    return(\n    <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)} onKeyUp={e => keyUp(e)} >\n        <StyledTetris>\n        <Stage stage={stage}/>\n        <aside>\n            {gameover? (\n                <Display gameover={gameover} text=\"Game Over\"/>\n            ) : (\n                <div>\n                <StartButton callback={startGame}/>\n                <Display text=\"Score\"/>\n                <Display text=\"Rows\"/>\n                <Display text=\"Level\"/>\n                \n                </div>\n            )}\n           \n        </aside>\n        </StyledTetris>\n    </StyledTetrisWrapper>\n    )\n}\n\nexport default Tetris;","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\n\nconst App = () => {\n\n  return(\n  <div className=\"App\">\n    <Tetris />\n  </div>\n  );\n\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}